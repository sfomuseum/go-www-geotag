// Code generated by go-bindata.
// sources:
// static/javascript/geotag.init.js
// static/javascript/geotag.map.js
// DO NOT EDIT!

package www

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/whosonfirst/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptGeotagInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xd1\x4f\xdb\x30\x10\xc6\x9f\x93\xbf\xe2\xe6\x17\x52\xa9\x0d\xef\x54\x7d\x60\x12\xd2\x90\x40\x9a\xa6\xb1\x17\x84\xa2\x6b\x7d\xa4\x16\x8e\x1d\xd9\x17\xba\x80\xf8\xdf\x27\x27\x71\x08\x65\x5d\xd7\x17\x44\x92\xef\x7e\xf7\xdd\xd5\x9f\x77\xca\x48\xbb\xcb\x51\xca\xab\x67\x32\x7c\xa3\x3c\x93\x21\x97\x09\x6d\x51\x8a\x39\x3c\x36\x66\xc3\xca\x1a\x08\xcf\x19\x05\xcd\xec\x35\x4d\x01\x00\x9e\xd1\x01\xd6\xaa\x78\xa2\x16\x56\x20\xed\xa6\xa9\xc8\x70\xbe\xb6\xb2\xcd\x4b\xe2\x4b\x66\xa7\xd6\x0d\x53\x26\x24\x32\x2e\x0c\xfd\xe6\x17\x32\x0b\xac\xd5\xe2\x89\x5a\x31\x5b\x8e\x14\xcf\xad\xa6\xa2\x71\xfa\x14\x4e\x57\xb4\x68\x9c\x9e\x92\x58\x9d\x0e\x0a\x35\x03\x27\x60\xfa\xe1\xd4\x23\x64\x5f\xe2\x78\xb3\xd7\x34\xd9\x58\xe3\xad\xa6\x5c\xdb\x32\x13\xb7\xca\x7b\x65\x4a\xb8\xfc\x7e\x0d\xc3\x2c\x89\x23\x6e\x9c\xe9\xad\xbc\x75\x7f\x27\xa0\x71\xc2\x83\xa8\x4e\x01\x77\x3f\x6e\x8e\xc3\xe2\x90\x07\x59\x41\x70\x0c\x15\xb6\xa5\x8c\xe2\x42\x23\xff\xcf\xb6\x82\x56\xa1\x5e\x68\x64\xc5\x8d\xa4\xc0\x9e\x78\x8a\xa8\x83\x9e\x86\x7a\x98\xd6\x1f\xf7\x66\xcd\x49\xde\xac\x29\x0f\x9b\xb3\xe6\xb8\xb9\x29\xe0\xa8\xbb\x17\x6b\xab\x53\xec\x05\xfd\x5f\x0e\xd9\xc8\x3a\x6a\x6f\x00\xfc\xd3\x59\x85\x75\x41\x1f\xce\x7f\x49\x7c\xa5\x29\xfc\xfb\xb5\xbd\x96\x99\xa8\xb0\xde\xdb\x4f\x5f\x73\xb0\x7d\x85\x35\x50\x4f\x10\xb3\x65\xb2\xdf\xfe\x43\x6b\x74\xa5\x87\x15\xbc\xa6\x89\x18\xc2\x23\x2e\x62\x8c\xe6\x69\x22\xc6\x20\x88\x8b\xf7\x50\x84\x0f\xf1\x50\x8b\x8b\xf1\x7c\xcf\xfb\x06\x83\xd5\xf3\x73\xd8\x11\x18\x22\x09\x6c\x41\x5a\xe0\xad\xf2\x50\xac\xe9\xd1\x3a\x2a\xe0\x27\x9a\xd2\x61\x05\x9e\xd1\xb1\x07\x76\x6d\x97\x04\x0b\xd2\xe1\x2e\x68\x4d\xe9\x23\xa7\x9f\x37\xef\xfa\xe7\x52\xf9\x5a\x63\xb8\xc2\xc4\x5a\xdb\xcd\x93\x58\x7e\x5a\x28\xac\xa0\x24\xcb\x58\xe6\x15\xd6\x3e\x2c\xf4\x16\xeb\xac\xa7\xcc\xc7\xb1\x3f\xed\xf4\xd3\x42\xef\x0c\xae\x35\x05\x53\xca\x78\x46\xc3\x0a\x99\x60\xf8\x3d\x0e\x6d\x75\x8b\x7e\x0b\x2b\x30\xb4\x83\x9b\xfc\x1b\xfa\x6d\x68\x1c\x7b\x45\x41\xe1\xd9\xc1\x0a\xb4\xdd\x60\xb8\xad\xf3\xf0\x6e\x62\x27\x4a\xc2\xd5\x9d\x84\x9a\x1a\x9d\x27\xb9\x37\x57\xf7\xb2\xeb\x30\xea\x97\x69\x9a\x04\x40\xaf\x0f\x03\x75\xc8\xf7\x7b\xa3\xff\x70\x7f\x16\x63\x7d\xf6\xb0\x9c\x6a\xba\xfc\x8e\x9a\x98\xae\x8f\xa2\x21\x46\x51\x15\x1e\x3b\xc1\xdb\xfe\xf1\xae\xb0\xce\x3d\xf1\x2f\x45\xbb\xec\x3e\x7a\x98\x8f\x9d\x1e\xe6\x93\x28\x4d\x52\xe6\xb5\xaa\xeb\x36\x14\x6f\x9c\xf5\x7e\x8b\xca\xf9\x3c\x28\xfb\x45\x8e\xf8\xf4\x6d\xb6\x4c\xff\x04\x00\x00\xff\xff\xa7\x27\xeb\x71\x10\x07\x00\x00")

func staticJavascriptGeotagInitJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptGeotagInitJs,
		"static/javascript/geotag.init.js",
	)
}

func staticJavascriptGeotagInitJs() (*asset, error) {
	bytes, err := staticJavascriptGeotagInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/geotag.init.js", size: 1808, mode: os.FileMode(420), modTime: time.Unix(1586203706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptGeotagMapJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xdd\x8e\xdb\x36\x13\xbd\x96\x9f\x62\xa2\x0f\xf8\x24\x05\x86\x94\x4d\x51\xa0\x90\xa3\x00\x69\x81\xa2\x01\xb6\x59\x60\x9b\xbd\x32\x0c\x83\x96\xc6\x92\x1a\x8a\x54\x49\x2a\xde\xb5\xe3\x77\x2f\x86\xfa\x31\x95\xf5\xb6\x77\xbd\xb1\xcd\xc3\x33\x87\x87\xa3\x99\x91\xbf\x32\x05\x87\x4a\x6a\x29\xf6\xb5\xd2\x06\xb2\xd9\xea\xdb\x37\x38\x9d\x57\x0b\x07\x8a\x75\xcb\x4c\xcd\xf8\x9c\x38\xa1\x43\xc0\xb5\x88\xb8\x61\xad\x86\x0c\xc2\x7d\x27\x72\x53\x4b\x11\x46\xa7\xc5\x02\x00\x80\x3c\x30\x63\x54\xbd\xeb\x08\x87\x0c\x82\x77\x0c\x2a\x85\xfb\xcc\xaf\x8c\x69\x75\x9a\x24\x65\x6d\xaa\x6e\x17\xe7\xb2\x49\x0c\x13\xa5\x62\x8d\xf6\xc1\x30\x55\xa2\xc9\xfc\xed\x8e\x33\xf1\xc5\x7f\xff\xb9\xdf\x79\x97\xb0\xf7\xf0\x0d\x66\x1a\x69\x92\x1c\x0e\x87\x58\xb6\x28\xb4\x51\x88\xa6\x61\x6d\x2c\x55\x99\xe4\xb2\x7d\x52\x75\x59\x99\xe7\x72\xff\xa7\xbd\x15\xdc\xb5\x28\xfe\xb0\x31\xbf\xb3\x16\x72\x29\x7a\xa7\x52\xe9\x6b\x07\xe9\xe1\x24\x81\x8f\xe6\x88\xc2\x9e\xf1\x5c\xfa\x53\xbf\x4b\x02\xc1\x8a\x92\x30\x25\x62\xc8\x92\xcd\xe2\x88\x69\xe4\x7b\xc2\x16\x0b\x2f\x68\x99\xd2\xf8\x1b\xd3\x55\x90\xc2\x94\xc9\x8a\xe9\x6a\xab\x8d\xa2\x8c\x7a\x14\x55\xef\x61\x02\xe3\x5a\x14\xf8\x78\xb7\x0f\x83\xff\x05\x11\x64\x59\x06\x6f\x22\x38\x2d\x3c\x6f\x24\x40\x06\x13\x57\x77\x3b\x6d\x54\x78\x13\xad\x7a\xa1\xf3\x20\x48\x36\x38\x33\x2b\x67\x25\x85\xb3\x3a\x4a\xd9\x0c\xcb\x0b\xc8\x54\xa9\x67\xe2\x2d\xaf\x4d\xe8\x27\x7e\x34\xa3\x92\x59\xa2\xc6\x1c\x45\x69\x2a\x78\x95\xc1\x0f\x11\x19\xcc\xa5\xd0\x92\x63\xcc\x65\x19\xfa\x0f\x42\x61\x2e\x4b\x51\x1f\xb1\xb0\x92\xa0\x8d\xaa\x45\x69\xc5\x3c\x85\xa6\x53\x02\x44\xc7\xf9\xe4\xdc\x39\x82\xec\x41\x66\x0d\xad\xdf\x6c\x06\x06\x67\x66\xc4\x6e\x26\xcc\xd6\x9f\xc5\xde\x6e\x56\x9e\xe7\x5d\x51\xb1\x8f\xe0\xa3\x30\x21\xad\x97\x70\xf3\x26\x9a\x09\xda\xed\x5f\xb9\x64\x26\xe4\xcc\x44\x33\x61\x77\x4f\x8a\x68\x35\xd7\xa7\x44\xd4\xfa\x13\xfb\x64\x95\x23\xea\xa6\x7e\x49\x3a\xce\x4a\x8a\xa8\x7f\x82\xb3\x04\x7d\x14\x5f\x19\xaf\x0b\xeb\x32\xe1\xcc\x24\x5c\x0a\x7f\x09\xbd\x49\xce\xcc\x12\xec\x91\x2f\x24\xeb\xf2\xd4\xac\xc7\xc2\xd6\x9b\xe7\x05\x9c\x99\xda\x74\x05\x06\xa9\xd5\xb0\x90\x14\xe5\x84\x49\x61\x31\x3a\x25\x48\xfb\xc3\x06\xc9\xd5\xa0\x39\x9c\xd6\xcb\xae\x16\xde\x79\xb9\xf0\x16\x5e\x50\xda\x7e\x72\xab\xb8\x61\xed\x16\xf9\xd2\x66\x7f\x56\xc9\xaf\x46\xc8\xf3\x86\x92\xa2\xf6\x98\x19\xbf\xd0\xd6\x3e\x6b\xeb\xed\x17\x7c\xf2\x37\x36\xe2\x9f\x2f\x3b\x70\xc7\x67\x7e\x89\x7d\x56\xcc\xe4\xae\xa6\xb4\xf4\x36\xe3\x12\xcd\x87\x61\x68\x61\xe8\xd7\x05\xd5\xa1\xeb\xa5\xe7\x3b\x16\xae\xd5\x25\x51\xa9\xe3\xd7\x3d\x7b\xe6\xd8\xc5\xaf\xc5\x92\xa9\x61\x16\x6e\x65\x6b\x28\x2d\x34\x28\xc8\xd8\x30\x08\xef\x5a\xca\xab\xb6\xcd\x15\xad\xbc\x6b\x91\xb7\xec\x09\x69\x00\x0c\x11\x31\x47\xb6\xe7\x68\x2c\x1c\xba\xea\xd3\xed\x86\x5c\x40\x06\xb7\x34\xd2\x43\xbf\x61\xad\xdf\xab\x0f\xf2\xae\x74\xcc\x8a\xe2\xb3\xa4\x3b\xce\x04\xe6\xe3\x7e\xb4\xfd\xe1\x82\x86\x63\xdf\xd0\x9c\x76\xd8\xbf\xd0\xf8\x95\x9c\x64\x5d\xb6\xc3\x98\xcf\x96\x4b\x2e\xfb\xca\xeb\x0b\x6f\x9e\x1f\xb7\x06\xff\xab\xda\x4b\x5e\x5f\x92\xa1\x73\x14\xf8\x19\x1f\xed\x34\x3a\xb0\xda\xc0\x1e\x4d\x5e\x85\x02\x0f\x70\x8f\x7f\x75\xa8\x4d\x18\x8c\xef\x16\x2d\x9b\x03\x56\xa8\xd0\xbe\x0b\x6d\x68\x7c\xac\xdb\x60\x09\x27\xa8\x90\x15\xa8\x74\x0a\x27\x08\x3e\xe4\x39\xb6\x26\x48\x21\x60\x6d\xcb\xeb\x9c\xd1\xf5\x12\x62\xc2\x19\xce\x51\x14\x9b\x0a\x45\xa8\x20\x7b\x0f\x2a\x36\xf8\x68\xc2\x28\x5a\x7d\xe7\xe9\xe1\xfe\x16\x32\x78\xb8\xbf\x8d\x73\x85\xcc\xe0\xdd\xee\x4f\xcc\xcd\xc3\xfd\xad\xb5\xf6\x33\x97\xbb\x70\x3d\x99\xdf\x4c\xf1\xbd\x29\x2e\x59\x11\x8e\x32\xe4\x6e\xc7\x34\x6e\x5b\x66\xaa\x14\x5e\xb8\x4d\x00\xe7\x51\xe3\x75\xf2\xec\x65\xf2\x2f\x9d\x6a\x5d\x9b\x27\x8e\xdb\x4e\xf1\x89\x35\x21\x33\x9e\xa9\xbf\xa3\x8d\x80\xbf\x71\x0b\xf9\xc5\x3e\xa3\x67\x6b\xaf\x96\xda\x9f\xb6\x08\x9a\x56\x2a\x93\xc2\x7a\xe1\x79\xde\x74\xea\x72\xd8\xdd\x8c\x3f\xb4\xec\x54\x8e\xba\x8f\xf3\x1a\xd6\x1e\x51\x0c\x0b\xda\xee\x14\x4f\x27\x77\x4b\x07\xdd\xea\x6e\x57\xc8\x86\xd5\x42\xa7\xb0\x0e\x58\xb0\x84\x60\x47\x1f\x39\x7d\x14\xc1\x66\x46\x6e\x19\xfd\x41\x4a\xe1\x34\x24\x29\x1d\xb3\x77\x9e\x68\xf6\x10\x5d\x1f\x31\x85\x1f\x6f\xde\x4e\x70\xc3\x1e\xb7\x34\xc4\x53\xb8\xf9\x89\xb0\xf3\xe0\x9b\xbe\xcf\xd7\x07\xbb\x9b\x1b\xb7\xc9\x9c\xfe\x74\x3b\x8c\x1a\xc3\x89\x76\x3a\xb7\x0f\x1e\x8f\x70\x38\x34\x1f\xec\xbf\x24\x58\x9c\x23\x9a\x0c\x7f\x07\x00\x00\xff\xff\x74\x89\x7a\x97\xb6\x0a\x00\x00")

func staticJavascriptGeotagMapJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptGeotagMapJs,
		"static/javascript/geotag.map.js",
	)
}

func staticJavascriptGeotagMapJs() (*asset, error) {
	bytes, err := staticJavascriptGeotagMapJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/geotag.map.js", size: 2742, mode: os.FileMode(420), modTime: time.Unix(1585872088, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/geotag.init.js": staticJavascriptGeotagInitJs,
	"static/javascript/geotag.map.js":  staticJavascriptGeotagMapJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"javascript": &bintree{nil, map[string]*bintree{
			"geotag.init.js": &bintree{staticJavascriptGeotagInitJs, map[string]*bintree{}},
			"geotag.map.js":  &bintree{staticJavascriptGeotagMapJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
